pipeline {
    agent any
    stages {
        stage('Gitlab') {
            steps {
                git branch: 'dev/be',
                credentialsId: 'GitLab',
                url: 'https://lab.ssafy.com/s08-bigdata-recom-sub2/S08P22D205.git'
            }
        }
        stage('Build') {
            steps {
                dir('sansam') {
                    sh "chmod +x gradlew"
                    sh "./gradlew bootJar"
                    sh "mv ./build/libs/*.jar ../Dockerfiles/sansam/"
                }
                dir('Dockerfiles/sansam') {
                    script {
                        dockerImage = docker.build "xronace/d205-springboot:latest"
                    }
                }
            }
        }
        stage('Docker hub push') {
            steps {
                script {
                    docker.withRegistry('', 'Docker-Hub') {
                        dockerImage.push("$BUILD_NUMBER")
                    }
                    sh "docker rmi xronace/d205-springboot:$BUILD_NUMBER"
                }
            }
        }
        stage('Deploy') {
            steps {
                sshagent(credentials: ['ec2-ssh']) {
                    sh 'ssh -o StrictHostKeyChecking=no ubuntu@j8d205.p.ssafy.io "docker stop d205-springboot || true"'
                    sh 'ssh -o StrictHostKeyChecking=no ubuntu@j8d205.p.ssafy.io "docker rm -f d205-springboot || true"'
                    sh 'ssh -o StrictHostKeyChecking=no ubuntu@j8d205.p.ssafy.io "docker run -dp 5000:5000 -e SPRING_DATASOURCE_URL=jdbc:mariadb://172.17.0.1:3306/sansam_db?serverTimezone=Asia/Seoul --net=bridge --name d205-springboot xronace/d205-springboot:latest"'
                    sh 'docker image prune -f'
                }
            }
        }
    }
}